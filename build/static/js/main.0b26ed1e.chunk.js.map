{"version":3,"sources":["SidebarChat.js","Sidebar.js","axios.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarChat","className","Avatar","Sidebar","IconButton","SearchOutlined","placeholder","type","instance","axios","create","baseURL","Chat","messages","useState","input","setInput","sendMessage","e","a","preventDefault","post","message","name","timestamp","received","AttachFile","map","i","InsertEmoticon","value","onChange","target","onClick","App","setMessages","useEffect","get","then","response","data","channel","Pusher","cluster","subscribe","bind","newMessage","alert","JSON","stringify","unbind_all","unsubscribe","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b26ed1e.chunk.js","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport React from \"react\"\nimport \"./SidebarChat.css\";\n\n\nfunction SidebarChat(){\n\n    return (\n        <div className=\"sidebarChat\">\n          <Avatar/>\n          <div className=\"sidebarChat_info\">\n              <h2>Room name</h2>\n              <p>This is the last message</p>\n          </div>\n\n\n        </div>\n    )\n}\nexport default SidebarChat","import React from \"react\"\nimport \"./Sidebar.css\"\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport  SidebarChat from \"./SidebarChat\"\nfunction Sidebar(){\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar/>\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                    <DonutLargeIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                   \n                </div>\n\n            </div>\n            <div className= \"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlined/>\n                    <input placeholder=\" Search or start new chat\" type=\"text\"></input>\n\n                </div>\n\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat/>\n                <SidebarChat/>\n                <SidebarChat/>\n                \n\n\n            </div>\n\n        </div>\n    )\n}\nexport default Sidebar","import axios from 'axios'\nconst instance = axios.create({\n    baseURL: \"http://localhost:9000\",\n});\nexport default instance","import React, { useState } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport {\n  AttachFile,\n  InsertEmoticon,\n  MoreVert,\n  SearchOutlined,\n} from \"@material-ui/icons\";\nimport \"./Chat.css\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport axios from \"./axios\";\n\nconst Chat = ({ messages }) => {\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    await axios.post(\"/messages/new\", {\n      message: input,\n      name: \"Mehreen\",\n      timestamp: \"Just now\",\n      received: true,\n    });\n\n    setInput(\"\");\n  };\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar />\n        <div className=\"chat__headerInfo\">\n          <h3>Room name</h3>\n          <p>Last seen at...</p>\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"chat__body\">\n        {messages.map((message, i) => {\n          return (\n            <p\n              key={i}\n              className={`chat__message ${\n                message.received && \"chat__reciever\"\n              }`}\n            >\n              <span className=\"chat__name\">{message.name}</span>\n              {message.message}\n              <span className=\"chat__timestamp\">{message.timestamp}</span>\n            </p>\n          );\n        })}\n      </div>\n\n      <div className=\"chat__footer\">\n        <InsertEmoticon />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}\n            type=\"text\"\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage} type=\"submit\">\n            Send a message\n          </button>\n        </form>\n        <MicIcon />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from'./Chat'\nimport { useEffect, useState } from 'react';\nimport Pusher from 'pusher-js';\nimport axios from './axios' ;\n\nfunction App() {\n  const [messages,setMessages]=useState([]);\n  useEffect(()=>{\n    axios.get('/messages/sync')\n    .then(response=>{\n      \n      setMessages(response.data)\n\n    })\n\n    \n    },[]);\n  useEffect(()=>{\n\n    const pusher = new Pusher('e85cf1ea7493acffe870', {\n      cluster: 'mt1'\n    });\n\n    const channel = pusher.subscribe('messages');\n    channel.bind('inserted', (newMessage)=> {\n      alert(JSON.stringify(newMessage));\n      setMessages([...messages,newMessage])\n    });\n    return ()=>{\n      channel.unbind_all();\n      channel.unsubscribe();\n    }\n\n  },[messages])\n  console.log(messages)\n  return (\n    <div className=\"App\">\n      <div className=\"app_body\">\n         \n      <Sidebar/>\n        <Chat messages={messages}/>\n\n      </div>\n      \n       \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}